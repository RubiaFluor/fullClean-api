// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fullClean.Infractucture;

namespace fullClean.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220413033703_migracionSales")]
    partial class migracionSales
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("fullClean.Dominio.Models.Cart", b =>
                {
                    b.Property<int>("cartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codproduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detailproduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nameproduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("cartId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("fullClean.Dominio.Models.Products", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codproduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detailproduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nameproduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("stockstore")
                        .HasColumnType("int");

                    b.Property<int>("stockwarehouse")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("fullClean.Dominio.Models.Sales", b =>
                {
                    b.Property<int>("salesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("cartId")
                        .HasColumnType("int");

                    b.Property<string>("codproduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detailproduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nameproduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("salesId");

                    b.HasIndex("cartId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("fullClean.Dominio.Models.Sales", b =>
                {
                    b.HasOne("fullClean.Dominio.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("cartId");

                    b.Navigation("Cart");
                });
#pragma warning restore 612, 618
        }
    }
}
